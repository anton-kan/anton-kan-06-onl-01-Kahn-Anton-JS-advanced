{"version":3,"sources":["components/Breadcrumbs/StyledNavLink.ts","components/Breadcrumbs/StyledNavSpan.ts","components/Breadcrumbs/index.tsx","helpers/routing_paths.ts","pages/Header.tsx","pages/Footer.tsx","pages/Home.tsx","store/counterReducer.ts","model/all-methods.ts","store/listsReducer.ts","components/MethodItem.tsx","components/MethodsList/MethodsListFilter.tsx","components/MethodsList/index.tsx","components/Tooltip.tsx","components/MethodsListsContainer/index.tsx","components/Counter.tsx","pages/Game.tsx","model/known-methods.ts","controller/is-mutating.js","controller/sample-array.js","controller/mutating-methods.js","controller/non-mutating-methods.js","controller/unknown-methods.js","pages/Solution.tsx","pages/Method.tsx","pages/Reference.tsx","pages/ErrorPage.tsx","pages/Main.tsx","store/index.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["StyledNavLink","styled","NavLink","StyledNavSpan","span","StyledUL","ul","Breadcrumbs","crumbs","useLocation","pathname","split","filter","i","to","map","index","length","slice","join","ROUTING_PATHS","home","game","solution","reference","method","activeClassName","attrs","Header","className","exact","Footer","Home","counter","createSlice","name","initialState","total","right","wrong","reducers","increment","state","payload","newState","actions","allMethods","Object","getOwnPropertyNames","Array","prototype","property","mutating","source","nonMutating","lists","move","action","dest","item","MethodItem","props","withLinks","ownListKey","leftListKey","rightListKey","dispatch","useDispatch","referencePath","generatePath","methodName","destListKey","incrementAction","moveAction","onClick","data-tooltip","MethodsListFilter","filterKey","searchParams","URLSearchParams","search","get","history","useHistory","location","useState","displayedFilter","setDisplayedFilter","filterTimeoutRef","useRef","useEffect","type","placeholder","value","onChange","event","newFilter","target","current","clearTimeout","setTimeout","set","toString","push","setFilter","MethodsList","title","list","filteredList","toLowerCase","includes","Tooltip","top","left","position","setPosition","text","setText","display","setDisplay","toggleTooltip","targetElement","closest","getBoundingClientRect","bottom","dataset","tooltip","document","addEventListener","removeEventListener","style","MethodsListsContainer","readonly","key","undefined","FlexDiv","div","BorderedDiv","StyledH3","h3","Counter","counterState","useSelector","Game","listsState","forEach","ARRAY_ARGS","FUNCTION_ARGS","NUMBER_ARGS","EMPTY_ARGS","knownMethods","args","isMutating","array","arrayImage","JSON","stringify","sampleArray","Date","mutatingMethods","nonMutatingMethods","mutatingMethodsList","unknownMethods","knownMethodsNames","Solution","Method","useParams","href","Reference","ErrorPage","Main","path","component","reducer","listsReducer","counterReducer","store","configureStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4294f4c8.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  font-size: 24px;\r\n  font-family: 'Raleway';\r\n  color: rgb(82, 81, 84);\r\n  font-weight: bold;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport default StyledNavLink;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledNavSpan = styled.span`\r\n  font-size: 24px;\r\n  font-family: 'Raleway';\r\n  color: rgb(82, 81, 84);\r\n  font-weight: bold;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport default StyledNavSpan;\r\n","import styled from 'styled-components';\r\nimport { useLocation } from 'react-router-dom';\r\nimport StyledNavLink from './StyledNavLink';\r\nimport StyledNavSpan from './StyledNavSpan';\r\n\r\nconst StyledUL = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  padding: 0;\r\n`;\r\n\r\nconst Breadcrumbs = () => {\r\n  const { pathname } = useLocation();\r\n  const crumbs = pathname.split('/').filter((i) => i);\r\n\r\n  return (\r\n    <StyledUL>\r\n      <StyledNavLink to=\"/\">home</StyledNavLink>\r\n      {crumbs.map((i, index) => (\r\n        <li key={i}>\r\n          {index < crumbs.length - 1 ? (\r\n            <StyledNavLink to={`/${crumbs.slice(0, index + 1).join('/')}`}>&nbsp;{`> ${i}`}</StyledNavLink>\r\n          ) : (\r\n            <StyledNavSpan>&nbsp;{`> ${i}`}</StyledNavSpan>\r\n          )}\r\n        </li>\r\n      ))}\r\n    </StyledUL>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n","const ROUTING_PATHS = {\r\n  home: '/',\r\n  game: '/game',\r\n  solution: '/solution',\r\n  reference: '/reference',\r\n  method: '/reference/:methodName',\r\n};\r\n\r\nexport default ROUTING_PATHS;\r\n","import { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport Breadcrumbs from '../components/Breadcrumbs';\r\nimport ROUTING_PATHS from '../helpers/routing_paths';\r\n\r\nconst activeClassName = 'nav-item-active';\r\n\r\nconst StyledNavLink = styled(NavLink).attrs({ activeClassName })`\r\n  font-size: 40px;\r\n  font-family: 'Raleway';\r\n  color: rgb(198, 196, 196);\r\n  font-weight: bold;\r\n  line-height: 1.2;\r\n  &.${activeClassName} {\r\n    color: rgb(143, 119, 119);\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"App-header\">\r\n      <h1 className=\"App-header-title\">Array Methods</h1>\r\n      <nav className=\"App-header-menu\">\r\n        <ul>\r\n          <li>\r\n            <StyledNavLink to={ROUTING_PATHS.home} exact>\r\n              Home\r\n            </StyledNavLink>\r\n          </li>\r\n          <li>\r\n            <StyledNavLink to={ROUTING_PATHS.game}>Game</StyledNavLink>\r\n          </li>\r\n          <li>\r\n            <StyledNavLink to={ROUTING_PATHS.solution}>Solution</StyledNavLink>\r\n          </li>\r\n          <li>\r\n            <StyledNavLink to={ROUTING_PATHS.reference}>Reference</StyledNavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <Breadcrumbs />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const Footer = () => <footer>&copy; Anton Kahn, 2021</footer>;\r\n\r\nexport default Footer;\r\n","const Home = () => (\r\n  <section>\r\n    <h2>Welcome to Array Methods game!</h2>\r\n  </section>\r\n);\r\n\r\nexport default Home;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst counter = createSlice({\r\n  name: 'counter',\r\n  initialState: { total: 0, right: 0, wrong: 0 },\r\n  reducers: {\r\n    increment: (state, { payload }) => {\r\n      const newState = { ...state };\r\n      newState.total++;\r\n      payload.right ? newState.right++ : newState.wrong++;\r\n      return newState;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment } = counter.actions;\r\n\r\nexport default counter.reducer;\r\n","const allMethods = (): string[] =>\r\n  Object.getOwnPropertyNames(Array.prototype).filter(\r\n    (property) => typeof (Array as { [key: string]: any }).prototype[property] === 'function'\r\n  );\r\n\r\nexport default allMethods;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport allMethods from '../model/all-methods';\r\nimport ILists from '../interfaces/ILists';\r\n\r\ninterface IListsPayload {\r\n  source: keyof ILists;\r\n  dest: keyof ILists;\r\n  method: string;\r\n}\r\n\r\nconst initialState: ILists = {\r\n  mutating: [],\r\n  source: allMethods(),\r\n  nonMutating: [],\r\n};\r\n\r\nconst lists = createSlice({\r\n  name: 'lists',\r\n  initialState,\r\n  reducers: {\r\n    move: (state: ILists, action: PayloadAction<IListsPayload>) => {\r\n      const { source, dest, method } = action.payload;\r\n      state[dest] = [...(state[dest] || []), method];\r\n      state[source] = (state[source] || []).filter((item) => item !== method);\r\n      return state;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { move } = lists.actions;\r\n\r\nexport default lists.reducer;\r\n","import { NavLink, generatePath } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { increment as incrementAction } from '../store/counterReducer';\r\nimport { move as moveAction } from '../store/listsReducer';\r\n\r\nimport './MethodItem.css';\r\nimport ROUTING_PATHS from '../helpers/routing_paths';\r\nimport ILists from '../interfaces/ILists';\r\n\r\ninterface IMethodItemProps {\r\n  withLinks?: boolean;\r\n  method: string;\r\n  ownListKey: keyof ILists;\r\n  leftListKey?: keyof ILists;\r\n  rightListKey?: keyof ILists;\r\n}\r\n\r\nconst MethodItem = (props: IMethodItemProps) => {\r\n  const { withLinks, method, ownListKey, leftListKey, rightListKey } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const referencePath = generatePath(ROUTING_PATHS.method, { methodName: method });\r\n\r\n  const move = (destListKey?: keyof ILists) => {\r\n    if (destListKey) {\r\n      dispatch(incrementAction({ right: true })); // TODO: Detect if the click was right or wrong\r\n      dispatch(moveAction({ source: ownListKey, dest: destListKey, method }));\r\n    }\r\n  };\r\n\r\n  const moveLeft = () => move(leftListKey);\r\n\r\n  const moveRight = () => move(rightListKey);\r\n\r\n  return (\r\n    <li className=\"MethodItem\">\r\n      {leftListKey && <button onClick={moveLeft}>&#8592;</button>}\r\n      <span data-tooltip={method}>{withLinks ? <NavLink to={referencePath}>{method}</NavLink> : method}</span>\r\n      {rightListKey && <button onClick={moveRight}>&#8594;</button>}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MethodItem;\r\n","import { useEffect, useState, useRef, SyntheticEvent } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nconst FILTER_DELAY = 1000;\r\n\r\ninterface IMethodsListFilterProps {\r\n  filterKey: string;\r\n}\r\n\r\nconst MethodsListFilter = (props: IMethodsListFilterProps) => {\r\n  const { filterKey } = props;\r\n  const searchParams = new URLSearchParams(useLocation().search);\r\n  const filter = searchParams.get(filterKey) || '';\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [displayedFilter, setDisplayedFilter] = useState(filter);\r\n  const filterTimeoutRef = useRef<NodeJS.Timeout>();\r\n\r\n  const setFilter = (newFilter: string) => {\r\n    searchParams.set(filterKey, newFilter);\r\n    location.search = searchParams.toString();\r\n    history.push(location);\r\n  };\r\n\r\n  // This is needed for cases when the filter was changed extrenally (for example, by clicking Back button)\r\n  useEffect(() => setDisplayedFilter(filter), [filter]);\r\n\r\n  const changeDisplayedFilter = (event: SyntheticEvent<HTMLInputElement>) => {\r\n    const newFilter = (event.target as HTMLInputElement).value;\r\n    setDisplayedFilter(newFilter);\r\n    if (filterTimeoutRef.current) {\r\n      clearTimeout(filterTimeoutRef.current);\r\n    }\r\n    filterTimeoutRef.current = setTimeout(() => {\r\n      setFilter(newFilter);\r\n    }, FILTER_DELAY);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Start typing to filter...\"\r\n      value={displayedFilter}\r\n      onChange={changeDisplayedFilter}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MethodsListFilter;\r\n","import { useLocation } from 'react-router-dom';\r\nimport ILists from '../../interfaces/ILists';\r\nimport MethodItem from '../MethodItem';\r\nimport MethodsListFilter from './MethodsListFilter';\r\n\r\ninterface IMethodsListProps {\r\n  withLinks?: boolean;\r\n  title: string;\r\n  ownListKey: keyof ILists;\r\n  leftListKey?: keyof ILists;\r\n  rightListKey?: keyof ILists;\r\n  list: string[];\r\n}\r\n\r\nconst MethodsList = (props: IMethodsListProps) => {\r\n  const { withLinks, title, ownListKey, leftListKey, rightListKey, list } = props;\r\n  const filterKey = `${title}Filter`;\r\n\r\n  const filter = new URLSearchParams(useLocation().search).get(filterKey);\r\n\r\n  const filteredList = filter ? list.filter((method) => method.toLowerCase().includes(filter.toLowerCase())) : list;\r\n  return (\r\n    <div className=\"MethodsList\">\r\n      <h3>{title}</h3>\r\n      <MethodsListFilter filterKey={filterKey} />\r\n      <ul>\r\n        {filteredList.map((method) => (\r\n          <MethodItem\r\n            withLinks={withLinks}\r\n            key={method}\r\n            method={method}\r\n            ownListKey={ownListKey}\r\n            leftListKey={leftListKey}\r\n            rightListKey={rightListKey}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MethodsList;\r\n","import { useEffect, useState } from 'react';\r\nimport './Tooltip.css';\r\n\r\nconst Tooltip = () => {\r\n  const [position, setPosition] = useState({ top: '0px', left: '0px' });\r\n  const [text, setText] = useState('');\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  const toggleTooltip = (event: Event) => {\r\n    const targetElement = (event.target as HTMLElement).closest('[data-tooltip]') as HTMLElement;\r\n    if (targetElement) {\r\n      setPosition({\r\n        top: `${targetElement.getBoundingClientRect().bottom}px`,\r\n        left: `${targetElement.getBoundingClientRect().left}px`,\r\n      });\r\n      setText(targetElement.dataset.tooltip || '');\r\n      setDisplay(true);\r\n      return;\r\n    }\r\n    setPosition({ top: '0px', left: '0px' });\r\n    setText('');\r\n    setDisplay(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousemove', toggleTooltip);\r\n    return () => document.removeEventListener('mousemove', toggleTooltip);\r\n  });\r\n\r\n  const style = {\r\n    left: position.left,\r\n    top: position.top,\r\n  };\r\n  return (\r\n    <div className={`Tooltip ${!display && 'Tooltip-hidden'}`} style={style}>\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import MethodsList from '../MethodsList';\r\nimport Tooltip from '../Tooltip';\r\nimport IMethodsList from '../../interfaces/IMethodsList';\r\n\r\nimport './index.css';\r\n\r\ninterface IMethodsListsContainerProps {\r\n  readonly: boolean;\r\n  withLinks: boolean;\r\n  lists: IMethodsList[];\r\n}\r\n\r\nconst MethodsListsContainer = (props: IMethodsListsContainerProps) => {\r\n  const { readonly, withLinks, lists } = props;\r\n  return (\r\n    <div className=\"MethodsListsContainer\">\r\n      <Tooltip />\r\n      {lists.map((item, index) => (\r\n        <MethodsList\r\n          withLinks={withLinks}\r\n          title={item.title}\r\n          key={item.key}\r\n          ownListKey={item.key}\r\n          leftListKey={(!readonly && index > 0 && lists[index - 1].key) || undefined}\r\n          rightListKey={(!readonly && index < lists.length - 1 && lists[index + 1].key) || undefined}\r\n          list={item.list}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MethodsListsContainer;\r\n","import styled from 'styled-components';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport IState from '../interfaces/IState';\r\nimport ICounter from '../interfaces/ICounter';\r\n\r\nconst FlexDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst BorderedDiv = styled.div`\r\n  border: 1px black solid;\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst StyledH3 = styled.h3`\r\n  margin: 0;\r\n`;\r\n\r\nconst Counter = () => {\r\n  const counterState = useSelector<IState, ICounter>((state) => state.counter);\r\n  return (\r\n    <FlexDiv>\r\n      <BorderedDiv>\r\n        <StyledH3>Clicks</StyledH3>\r\n        <div>\r\n          Total: {counterState.total} Right: {counterState.right} Wrong: {counterState.wrong}\r\n        </div>\r\n      </BorderedDiv>\r\n    </FlexDiv>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import MethodsListsContainer from '../components/MethodsListsContainer';\r\nimport Counter from '../components/Counter';\r\nimport { useSelector } from 'react-redux';\r\nimport IState from '../interfaces/IState';\r\nimport IMethodsList from '../interfaces/IMethodsList';\r\n\r\nconst Game = () => {\r\n  const lists: IMethodsList[] = [\r\n    { title: 'Mutating', key: 'mutating', list: [] },\r\n    { title: 'Source', key: 'source', list: [] },\r\n    { title: 'Non-mutating', key: 'nonMutating', list: [] },\r\n  ];\r\n\r\n  const listsState = useSelector((state: IState) => state.lists);\r\n  lists.forEach((item) => (item.list = listsState[item.key] || []));\r\n\r\n  return (\r\n    <section>\r\n      <h2>The game has started!</h2>\r\n      <Counter />\r\n      <MethodsListsContainer readonly={false} lists={lists} withLinks={false} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","const ARRAY_ARGS = [0, 3, 4];\r\nconst FUNCTION_ARGS = [(item: number) => item < 4];\r\nconst NUMBER_ARGS = [3];\r\nconst EMPTY_ARGS: number[] = [];\r\n\r\ninterface IMethodWithArgs {\r\n  method: string;\r\n  args: number[] | Function[];\r\n}\r\n\r\nconst knownMethods = (): IMethodWithArgs[] => [\r\n  { method: 'concat', args: ARRAY_ARGS },\r\n  { method: 'copyWithin', args: ARRAY_ARGS },\r\n  { method: 'entries', args: EMPTY_ARGS },\r\n  { method: 'every', args: FUNCTION_ARGS },\r\n  { method: 'fill', args: ARRAY_ARGS },\r\n  { method: 'filter', args: FUNCTION_ARGS },\r\n  { method: 'find', args: FUNCTION_ARGS },\r\n  { method: 'findIndex', args: FUNCTION_ARGS },\r\n  { method: 'flat', args: EMPTY_ARGS },\r\n  { method: 'flatMap', args: FUNCTION_ARGS },\r\n  { method: 'forEach', args: FUNCTION_ARGS },\r\n  { method: 'includes', args: NUMBER_ARGS },\r\n  { method: 'indexOf', args: NUMBER_ARGS },\r\n  { method: 'join', args: EMPTY_ARGS },\r\n  { method: 'keys', args: EMPTY_ARGS },\r\n  { method: 'lastIndexOf', args: NUMBER_ARGS },\r\n  { method: 'map', args: FUNCTION_ARGS },\r\n  { method: 'pop', args: EMPTY_ARGS },\r\n  { method: 'push', args: NUMBER_ARGS },\r\n  { method: 'reduce', args: FUNCTION_ARGS },\r\n  { method: 'reduceRight', args: FUNCTION_ARGS },\r\n  { method: 'reverse', args: EMPTY_ARGS },\r\n  { method: 'shift', args: EMPTY_ARGS },\r\n  { method: 'slice', args: ARRAY_ARGS },\r\n  { method: 'some', args: FUNCTION_ARGS },\r\n  { method: 'sort', args: EMPTY_ARGS },\r\n  { method: 'splice', args: ARRAY_ARGS },\r\n  { method: 'toLocaleString', args: EMPTY_ARGS },\r\n  { method: 'toString', args: EMPTY_ARGS },\r\n  { method: 'unshift', args: NUMBER_ARGS },\r\n  { method: 'values', args: EMPTY_ARGS },\r\n];\r\n\r\nexport default knownMethods;\r\n","const isMutating = (array, method, args) => {\r\n  const arrayImage = JSON.stringify(array);\r\n  array[method](...args);\r\n  return JSON.stringify(array) !== arrayImage;\r\n};\r\n\r\nexport default isMutating;\r\n","const sampleArray = () => [1, 2, 3, 4, 5, [6, 7], 3, new Date(), 8, 9, 10];\r\n\r\nexport default sampleArray;\r\n","import knownMethods from '../model/known-methods';\r\nimport isMutating from './is-mutating';\r\nimport sampleArray from './sample-array';\r\n\r\nconst mutatingMethods = () =>\r\n  knownMethods()\r\n    .filter(({ method, args }) => isMutating(sampleArray(), method, args))\r\n    .map((item) => item.method);\r\n\r\nexport default mutatingMethods;\r\n","import knownMethods from '../model/known-methods';\r\nimport mutatingMethods from './mutating-methods';\r\n\r\nconst nonMutatingMethods = () => {\r\n  const mutatingMethodsList = mutatingMethods();\r\n  return knownMethods()\r\n    .filter((name) => !mutatingMethodsList.includes(name))\r\n    .map((item) => item.method);\r\n};\r\n\r\nexport default nonMutatingMethods;\r\n","import allMethods from '../model/all-methods';\r\nimport knownMethods from '../model/known-methods';\r\n\r\nconst unknownMethods = () => {\r\n  const knownMethodsNames = knownMethods().map((item) => item.method);\r\n  return allMethods().filter((name) => !knownMethodsNames.includes(name));\r\n};\r\n\r\nexport default unknownMethods;\r\n","import MethodsListsContainer from '../components/MethodsListsContainer';\r\nimport IMethodsList from '../interfaces/IMethodsList';\r\nimport mutatingMethods from '../controller/mutating-methods';\r\nimport nonMutatingMethods from '../controller/non-mutating-methods';\r\nimport unknownMethods from '../controller/unknown-methods';\r\n\r\nconst Solution = () => {\r\n  const lists: IMethodsList[] = [\r\n    { title: 'Mutating', key: 'mutating', list: mutatingMethods() },\r\n    { title: 'Unknown', key: 'unknown', list: unknownMethods() },\r\n    { title: 'Non-mutating', key: 'nonMutating', list: nonMutatingMethods() },\r\n  ];\r\n\r\n  return (\r\n    <section>\r\n      <h2>Correct solution</h2>\r\n      <MethodsListsContainer readonly withLinks={false} lists={lists} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Solution;\r\n","import { useParams } from 'react-router-dom';\r\n\r\ninterface IParamTypes {\r\n  methodName: string;\r\n}\r\n\r\nconst Method = () => {\r\n  const { methodName } = useParams<IParamTypes>();\r\n\r\n  return (\r\n    <section>\r\n      <h2>{methodName}</h2>\r\n      <a\r\n        href={`https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/${methodName}`}\r\n        target=\"blank\"\r\n      >\r\n        MDN Documentation\r\n      </a>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Method;\r\n","import MethodsListsContainer from '../components/MethodsListsContainer';\r\nimport IMethodsList from '../interfaces/IMethodsList';\r\nimport allMethods from '../model/all-methods';\r\n\r\nconst Reference = () => {\r\n  const lists: IMethodsList[] = [{ title: 'All methods', key: 'all', list: allMethods() }];\r\n\r\n  return (\r\n    <section>\r\n      <h2>JavaScript Array methods Reference</h2>\r\n      <MethodsListsContainer readonly withLinks lists={lists} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Reference;\r\n","const ErrorPage = () => (\r\n  <section>\r\n    <h2>Page not found</h2>\r\n  </section>\r\n);\r\n\r\nexport default ErrorPage;\r\n","import { Switch, Route } from 'react-router-dom';\r\n\r\nimport ROUTING_PATHS from '../helpers/routing_paths';\r\nimport Home from './Home';\r\nimport Game from './Game';\r\nimport Solution from './Solution';\r\nimport Method from './Method';\r\nimport Reference from './Reference';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <main>\r\n      <div className=\"App-container\">\r\n        <Switch>\r\n          <Route exact path={ROUTING_PATHS.home} component={Home} />\r\n          <Route path={ROUTING_PATHS.game} component={Game} />\r\n          <Route path={ROUTING_PATHS.solution} component={Solution} />\r\n          <Route path={ROUTING_PATHS.method} component={Method} />\r\n          <Route path={ROUTING_PATHS.reference} component={Reference} />\r\n          <Route path=\"*\" component={ErrorPage} />\r\n        </Switch>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport listsReducer from './listsReducer';\r\nimport counterReducer from './counterReducer';\r\n\r\nconst reducer = { lists: listsReducer, counter: counterReducer };\r\n\r\nconst store = configureStore({ reducer });\r\n\r\nexport default store;\r\n","import { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport Header from './pages/Header';\r\nimport Footer from './pages/Footer';\r\nimport Main from './pages/Main';\r\nimport store from './store';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Header />\r\n          <Main />\r\n          <Footer />\r\n        </Router>\r\n      </Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}