{"version":3,"sources":["components/Breadcrumbs/StyledNavLink.ts","components/Breadcrumbs/StyledNavSpan.ts","components/Breadcrumbs/index.tsx","helpers/routing_paths.ts","pages/Header.tsx","pages/Footer.tsx","pages/Home.tsx","store/counterReducer.ts","model/all-methods.ts","store/listsReducer.ts","store/winReducer.ts","store/timerReducer.ts","model/known-methods.ts","controller/is-mutating.js","controller/sample-array.js","controller/mutating-methods.js","controller/non-mutating-methods.js","controller/check-method.js","controller/check-method-lists.js","components/MethodItem/index.tsx","components/MethodsList/MethodsListFilter.tsx","components/MethodsList/index.tsx","components/Tooltip/index.tsx","components/MethodsListsContainer/index.tsx","components/Counter.tsx","controller/top-scores-storage.ts","components/WonPopup.tsx","pages/Game.tsx","controller/unknown-methods.js","pages/Solution.tsx","pages/Method.tsx","pages/Reference.tsx","pages/ErrorPage.tsx","pages/TopScores.tsx","pages/Main.tsx","store/index.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["StyledNavLink","styled","NavLink","StyledNavSpan","span","StyledUL","ul","Breadcrumbs","crumbs","useLocation","pathname","split","filter","i","to","map","index","length","slice","join","ROUTING_PATHS","home","game","solution","reference","method","topScores","prodStartingPoint","activeClassName","attrs","Header","className","exact","StyledFooter","footer","Footer","Home","initialState","total","right","wrong","counter","createSlice","name","reducers","increment","state","payload","newState","reset","actions","allMethods","Object","getOwnPropertyNames","Array","prototype","property","mutating","source","nonMutating","lists","move","action","dest","item","win","set","timer","intervalRef","value","setRef","stop","clearInterval","start","dispatch","getState","setInterval","ARRAY_ARGS","FUNCTION_ARGS","NUMBER_ARGS","EMPTY_ARGS","knownMethods","args","isMutating","array","arrayImage","JSON","stringify","sampleArray","Date","mutatingMethods","nonMutatingMethods","mutatingMethodsList","includes","checkMethod","methodName","listKey","compareArrays","array1","array2","every","element","checkMethodLists","methodLists","MethodItem","props","withLinks","ownListKey","leftListKey","rightListKey","useDispatch","referencePath","generatePath","destListKey","incrementAction","moveAction","winAction","stopTimerAction","onClick","data-tooltip","MethodsListFilter","filterKey","searchParams","URLSearchParams","search","get","history","useHistory","location","useState","displayedFilter","setDisplayedFilter","filterTimeoutRef","useRef","useEffect","type","placeholder","onChange","event","newFilter","target","current","clearTimeout","setTimeout","toString","push","setFilter","MethodsList","title","list","filteredList","toLowerCase","Tooltip","top","left","position","setPosition","text","setText","display","setDisplay","toggleTooltip","targetElement","closest","getBoundingClientRect","bottom","dataset","tooltip","document","addEventListener","removeEventListener","style","MethodsListsContainer","readonly","key","undefined","FlexDiv","div","BorderedDiv","StyledH3","h3","RightSpan","WrongSpan","Counter","counterState","useSelector","timerState","TOP_SCORES_STORAGE_KEY","loadTopScores","localStorage","getItem","parse","addTopScore","score","setItem","saveTopScores","VeilDiv","PopupDiv","ButtonsDiv","WonPopup","setName","won","saveScore","time","resetWinAction","resetListsAction","resetCounterAction","resetTimerAction","startTimerThunk","Game","listsState","forEach","unknownMethods","knownMethodsNames","Solution","Method","useParams","href","Reference","ErrorPage","StyledTable","table","TopScores","sort","a","b","rows","StyledMain","main","Main","path","component","reducer","listsReducer","counterReducer","timerReducer","winReducer","store","configureStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+VAWeA,EAROC,YAAOC,IAAPD,CAAH,iJCOJE,EAROF,IAAOG,KAAV,iJ,OCGbC,EAAWJ,IAAOK,GAAV,kFA0BCC,EApBK,WAAO,IAEnBC,EADeC,cAAbC,SACgBC,MAAM,KAAKC,QAAO,SAACC,GAAD,OAAOA,KAEjD,OACE,eAACR,EAAD,WACE,cAAC,EAAD,CAAeS,GAAG,IAAlB,kBACCN,EAAOO,KAAI,SAACF,EAAGG,GAAJ,OACV,6BACGA,EAAQR,EAAOS,OAAS,EACvB,eAAC,EAAD,CAAeH,GAAE,WAAMN,EAAOU,MAAM,EAAGF,EAAQ,GAAGG,KAAK,MAAvD,6BAA2EN,MAE3E,eAAC,EAAD,8BAA2BA,OAJtBA,UCTFO,EAVO,CACpBC,KAAM,IACNC,KAAM,QACNC,SAAU,YACVC,UAAW,aACXC,OAAQ,yBACRC,UAAW,cACXC,kBAAmB,0ECDfC,EAAkB,kBAElB5B,EAAgBC,YAAOC,KAAS2B,MAAM,CAAED,mBAAxB3B,CAAH,mMAMb2B,GAoCSE,EA/BA,WACb,OACE,yBAAQC,UAAU,aAAlB,UACE,oBAAIA,UAAU,mBAAd,2BACA,qBAAKA,UAAU,kBAAf,SACE,+BACE,6BACE,cAAC,EAAD,CAAejB,GAAIM,EAAcC,KAAMW,OAAK,EAA5C,oBAIF,6BACE,cAAC,EAAD,CAAelB,GAAIM,EAAcE,KAAjC,oBAGF,6BACE,cAAC,EAAD,CAAeR,GAAIM,EAAcG,SAAjC,wBAEF,6BACE,cAAC,EAAD,CAAeT,GAAIM,EAAcI,UAAjC,yBAEF,6BACE,cAAC,EAAD,CAAeV,GAAIM,EAAcM,UAAjC,+BAIN,cAAC,EAAD,QC3CAO,EAAehC,IAAOiC,OAAV,gHASHC,EAFA,kBAAM,cAACF,EAAD,qCCHNG,EANF,kBACX,kCACE,mE,eCAEC,EAAe,CAAEC,MAAO,EAAGC,MAAO,EAAGC,MAAO,GAE5CC,EAAUC,YAAY,CAC1BC,KAAM,UACNN,eACAO,SAAU,CACRC,UAAW,SAACC,EAAD,GAAyB,IAAfC,EAAc,EAAdA,QACbC,EAAQ,eAAQF,GAGtB,OAFAE,EAASV,QACTS,EAAQR,MAAQS,EAAST,QAAUS,EAASR,QACrCQ,GAETC,MAAO,WACL,OAAO,eAAKZ,O,EAKkBI,EAAQS,QAA7BL,E,EAAAA,UAAWI,E,EAAAA,MAEXR,IAAf,Q,QCjBeU,EALI,kBACjBC,OAAOC,oBAAoBC,MAAMC,WAAW3C,QAC1C,SAAC4C,GAAD,MAA+E,oBAAzDF,MAAiCC,UAAUC,OCQ/DnB,EAAuB,CAC3BoB,SAAU,GACVC,OAAQP,IACRQ,YAAa,IAGTC,EAAQlB,YAAY,CACxBC,KAAM,QACNN,eACAO,SAAU,CACRiB,KAAM,SAACf,EAAegB,GAA0C,IAAD,EAC5BA,EAAOf,QAAhCW,EADqD,EACrDA,OAAQK,EAD6C,EAC7CA,KAAMtC,EADuC,EACvCA,OAGtB,OAFAqB,EAAMiB,GAAN,sBAAmBjB,EAAMiB,IAAS,IAAlC,CAAuCtC,IACvCqB,EAAMY,IAAWZ,EAAMY,IAAW,IAAI9C,QAAO,SAACoD,GAAD,OAAUA,IAASvC,KACzDqB,GAETG,MAAO,WACL,OAAO,eAAKZ,O,EAKauB,EAAMV,QAAtBW,E,EAAAA,KAAMZ,E,EAAAA,MAENW,KAAf,QC9BMK,GAAMvB,YAAY,CACtBC,KAAM,MACNN,aAJmB,MAKnBO,SAAU,CACRsB,IAAK,kBAAM,GACXjB,MAAO,kBAPU,U,GAWSgB,GAAIf,QAAnBgB,G,GAAAA,IAAKjB,G,GAAAA,MAELgB,MAAf,QCNME,GAAQzB,YAAY,CACxBC,KAAM,QACNN,aAJ2B,CAAE+B,YAAa,KAAMC,MAAO,GAKvDzB,SAAU,CACR0B,OAAQ,SAACxB,EAAegB,GAA0C,IACxDM,EAAgBN,EAAOf,QAAvBqB,YACR,OAAO,2BAAKtB,GAAZ,IAAmBsB,iBAErBG,KAAM,SAACzB,GAIL,OAHIA,EAAMsB,aACRI,cAAc1B,EAAMsB,aAEf,2BAAKtB,GAAZ,IAAmBsB,YAAa,QAElCvB,UAAW,SAACC,GACV,OAAO,2BAAKA,GAAZ,IAAmBuB,MAAOvB,EAAMuB,MAAQ,KAE1CpB,MAAO,SAACH,GACN,OAAO,2BAAKA,GAAZ,IAAmBuB,MAAO,QAKnBI,GAAQ,SAACC,EAAoBC,GACxC,IAAKA,IAAWR,MAAMC,YAAa,CACjC,IAAMA,EAAcQ,aAAY,WAC9BF,EAASP,GAAMjB,QAAQL,eACtB,KACH6B,EAASP,GAAMjB,QAAQoB,OAAO,CAAEF,mB,GAILD,GAAMjB,QAAtBD,G,GAAAA,MAAOsB,G,GAAAA,KAEPJ,MAAf,QC3CMU,I,MAAa,CAAC,EAAG,EAAG,IACpBC,GAAgB,CAAC,SAACd,GAAD,OAAkBA,EAAO,IAC1Ce,GAAc,CAAC,GACfC,GAAuB,GA0CdC,GAnCM,iBAAyB,CAC5C,CAAExD,OAAQ,SAAUyD,KAAML,IAC1B,CAAEpD,OAAQ,aAAcyD,KAAML,IAC9B,CAAEpD,OAAQ,UAAWyD,KAAMF,IAC3B,CAAEvD,OAAQ,QAASyD,KAAMJ,IACzB,CAAErD,OAAQ,OAAQyD,KAAML,IACxB,CAAEpD,OAAQ,SAAUyD,KAAMJ,IAC1B,CAAErD,OAAQ,OAAQyD,KAAMJ,IACxB,CAAErD,OAAQ,YAAayD,KAAMJ,IAC7B,CAAErD,OAAQ,OAAQyD,KAAMF,IACxB,CAAEvD,OAAQ,UAAWyD,KAAMJ,IAC3B,CAAErD,OAAQ,UAAWyD,KAAMJ,IAC3B,CAAErD,OAAQ,WAAYyD,KAAMH,IAC5B,CAAEtD,OAAQ,UAAWyD,KAAMH,IAC3B,CAAEtD,OAAQ,OAAQyD,KAAMF,IACxB,CAAEvD,OAAQ,OAAQyD,KAAMF,IACxB,CAAEvD,OAAQ,cAAeyD,KAAMH,IAC/B,CAAEtD,OAAQ,MAAOyD,KAAMJ,IACvB,CAAErD,OAAQ,MAAOyD,KAAMF,IACvB,CAAEvD,OAAQ,OAAQyD,KAAMH,IACxB,CAAEtD,OAAQ,SAAUyD,KAAMJ,IAC1B,CAAErD,OAAQ,cAAeyD,KAAMJ,IAC/B,CAAErD,OAAQ,UAAWyD,KAAMF,IAC3B,CAAEvD,OAAQ,QAASyD,KAAMF,IACzB,CAAEvD,OAAQ,QAASyD,KAAML,IACzB,CAAEpD,OAAQ,OAAQyD,KAAMJ,IACxB,CAAErD,OAAQ,OAAQyD,KAAMF,IACxB,CAAEvD,OAAQ,SAAUyD,KAAML,IAC1B,CAAEpD,OAAQ,iBAAkByD,KAAMF,IAClC,CAAEvD,OAAQ,WAAYyD,KAAMF,IAC5B,CAAEvD,OAAQ,UAAWyD,KAAMH,IAC3B,CAAEtD,OAAQ,SAAUyD,KAAMF,IAC1B,CAAEvD,OAAQ,KAAMyD,KAAMH,MCpCTI,GANI,SAACC,EAAO3D,EAAQyD,GACjC,IAAMG,EAAaC,KAAKC,UAAUH,GAElC,OADAA,EAAM3D,GAAN,MAAA2D,EAAK,YAAYF,IACVI,KAAKC,UAAUH,KAAWC,GCDpBG,GAFK,iBAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAAG,GAAI,EAAG,IAAIC,KAAQ,EAAG,EAAG,KCSxDC,GALS,kBACtBT,KACGrE,QAAO,gBAAGa,EAAH,EAAGA,OAAQyD,EAAX,EAAWA,KAAX,OAAsBC,GAAWK,KAAe/D,EAAQyD,MAC/DnE,KAAI,SAACiD,GAAD,OAAUA,EAAKvC,WCGTkE,GAPY,WACzB,IAAMC,EAAsBF,KAC5B,OAAOT,KACJlE,KAAI,SAACiD,GAAD,OAAUA,EAAKvC,UACnBb,QAAO,SAAC+B,GAAD,OAAWiD,EAAoBC,SAASlD,OCOrCmD,GAXK,SAACC,EAAYC,GAC/B,OAAQA,GACN,IAAK,WACH,OAAON,KAAkBG,SAASE,GACpC,IAAK,cACH,OAAOJ,KAAqBE,SAASE,GACvC,QACE,OAAO,ICHPE,GAAgB,SAACC,EAAQC,GAAT,OACpBD,EAAOjF,SAAWkF,EAAOlF,QAAUiF,EAAOE,OAAM,SAACC,GAAD,OAAaF,EAAON,SAASQ,OAEhEC,GAPU,SAACC,GAAD,OACvBN,GAAcM,EAAY9C,SAAUiC,OACpCO,GAAcM,EAAY5C,YAAagC,OCkD1Ba,GAhCI,SAACC,GAA6B,IACvCC,EAA6DD,EAA7DC,UAAWjF,EAAkDgF,EAAlDhF,OAAQkF,EAA0CF,EAA1CE,WAAYC,EAA8BH,EAA9BG,YAAaC,EAAiBJ,EAAjBI,aAC9CnC,EAAWoC,cAEXC,EAAgBC,YAAa5F,EAAcK,OAAQ,CAAEsE,WAAYtE,IAEjEoC,EAAO,SAACoD,GACRA,GACFvC,GAAS,SAACA,EAAoBC,GAC5BD,EAASwC,EAAgB,CAAE3E,MAAOuD,GAAYrE,EAAQwF,MACtDvC,EAASyC,EAAW,CAAEzD,OAAQiD,EAAY5C,KAAMkD,EAAaxF,YACzD6E,GAAiB3B,IAAWf,SAC9Bc,EAAS0C,MACT1C,EAAS2C,WAUjB,OACE,qBAAItF,UAAU,aAAd,UACG6E,GAAe,wBAAQU,QANX,kBAAMzD,EAAK+C,IAMR,oBAChB,sBAAMW,eAAc9F,EAApB,SAA6BiF,EAAY,cAAC,IAAD,CAAS5F,GAAIiG,EAAb,SAA6BtF,IAAoBA,IACzFoF,GAAgB,wBAAQS,QANX,kBAAMzD,EAAKgD,IAMR,wB,SCARW,GAzCW,SAACf,GAAoC,IACrDgB,EAAchB,EAAdgB,UACFC,EAAe,IAAIC,gBAAgBlH,cAAcmH,QACjDhH,EAAS8G,EAAaG,IAAIJ,IAAc,GAExCK,EAAUC,cACVC,EAAWvH,cAN2C,EAQdwH,mBAASrH,GARK,oBAQrDsH,EARqD,KAQpCC,EARoC,KAStDC,EAAmBC,mBASzBC,qBAAU,kBAAMH,EAAmBvH,KAAS,CAACA,IAa7C,OACE,uBACE2H,KAAK,OACLC,YAAY,4BACZnE,MAAO6D,EACPO,SAhB0B,SAACC,GAC7B,IAAMC,EAAaD,EAAME,OAA4BvE,MACrD8D,EAAmBQ,GACfP,EAAiBS,SACnBC,aAAaV,EAAiBS,SAEhCT,EAAiBS,QAAUE,YAAW,YAftB,SAACJ,GACjBjB,EAAaxD,IAAIuD,EAAWkB,GAC5BX,EAASJ,OAASF,EAAasB,WAC/BlB,EAAQmB,KAAKjB,GAaXkB,CAAUP,KAjCK,SCsCNQ,GA3BK,SAAC1C,GAA8B,IACzCC,EAAkED,EAAlEC,UAAW0C,EAAuD3C,EAAvD2C,MAAOzC,EAAgDF,EAAhDE,WAAYC,EAAoCH,EAApCG,YAAaC,EAAuBJ,EAAvBI,aAAcwC,EAAS5C,EAAT4C,KAC3D5B,EAAS,UAAM2B,EAAN,UAETxI,EAAS,IAAI+G,gBAAgBlH,cAAcmH,QAAQC,IAAIJ,GAEvD6B,EAAe1I,EAASyI,EAAKzI,QAAO,SAACa,GAAD,OAAYA,EAAO8H,cAAc1D,SAASjF,EAAO2I,kBAAkBF,EAC7G,OACE,sBAAKtH,UAAU,cAAf,UACE,6BAAKqH,IACL,cAAC,GAAD,CAAmB3B,UAAWA,IAC9B,6BACG6B,EAAavI,KAAI,SAACU,GAAD,OAChB,cAAC,GAAD,CACEiF,UAAWA,EAEXjF,OAAQA,EACRkF,WAAYA,EACZC,YAAaA,EACbC,aAAcA,GAJTpF,YCWF+H,I,MArCC,WAAO,IAAD,EACYvB,mBAAS,CAAEwB,IAAK,MAAOC,KAAM,QADzC,oBACbC,EADa,KACHC,EADG,OAEI3B,mBAAS,IAFb,oBAEb4B,EAFa,KAEPC,EAFO,OAGU7B,oBAAS,GAHnB,oBAGb8B,EAHa,KAGJC,EAHI,KAKdC,EAAgB,SAACvB,GACrB,IAAMwB,EAAiBxB,EAAME,OAAuBuB,QAAQ,kBAC5D,GAAID,EAOF,OANAN,EAAY,CACVH,IAAI,GAAD,OAAKS,EAAcE,wBAAwBC,OAA3C,MACHX,KAAK,GAAD,OAAKQ,EAAcE,wBAAwBV,KAA3C,QAENI,EAAQI,EAAcI,QAAQC,SAAW,SACzCP,GAAW,GAGbJ,EAAY,CAAEH,IAAK,MAAOC,KAAM,QAChCI,EAAQ,IACRE,GAAW,IAGb1B,qBAAU,WAER,OADAkC,SAASC,iBAAiB,YAAaR,GAChC,kBAAMO,SAASE,oBAAoB,YAAaT,OAGzD,IAAMU,EAAQ,CACZjB,KAAMC,EAASD,KACfD,IAAKE,EAASF,KAEhB,OACE,qBAAK1H,UAAS,mBAAcgI,GAAW,kBAAoBY,MAAOA,EAAlE,SACGd,MCHQe,I,MApBe,SAACnE,GAAwC,IAC7DoE,EAA+BpE,EAA/BoE,SAAUnE,EAAqBD,EAArBC,UAAW9C,EAAU6C,EAAV7C,MAC7B,OACE,sBAAK7B,UAAU,wBAAf,UACE,cAAC,GAAD,IACC6B,EAAM7C,KAAI,SAACiD,EAAMhD,GAAP,OACT,cAAC,GAAD,CACE0F,UAAWA,EACX0C,MAAOpF,EAAKoF,MAEZzC,WAAY3C,EAAK8G,IACjBlE,aAAeiE,GAAY7J,EAAQ,GAAK4C,EAAM5C,EAAQ,GAAG8J,UAAQC,EACjElE,cAAgBgE,GAAY7J,EAAQ4C,EAAM3C,OAAS,GAAK2C,EAAM5C,EAAQ,GAAG8J,UAAQC,EACjF1B,KAAMrF,EAAKqF,MAJNrF,EAAK8G,aCddE,GAAU/K,IAAOgL,IAAV,0EAKPC,GAAcjL,IAAOgL,IAAV,gGAMXE,GAAWlL,IAAOmL,GAAV,0CAIRC,GAAYpL,IAAOG,KAAV,6CAITkL,GAAYrL,IAAOG,KAAV,2CAuBAmL,GAnBC,WACd,IAAMC,EAAeC,aAA8B,SAAC3I,GAAD,OAAWA,EAAML,WAC9DiJ,EAAaD,aAA4B,SAAC3I,GAAD,OAAWA,EAAMqB,SAChE,OACE,cAAC6G,GAAD,UACE,eAACE,GAAD,WACE,cAACC,GAAD,6BACA,gCAAMO,EAAWrH,MAAjB,OAEA,cAAC8G,GAAD,qBACA,0CACUK,EAAalJ,MADvB,IAC8B,eAAC+I,GAAD,qBAAmBG,EAAajJ,SAAmB,IAC/E,eAAC+I,GAAD,qBAAmBE,EAAahJ,kBCxCpCmJ,GAAyB,aAMlBC,GAAgB,WAC3B,IAAMlK,EAAYmK,aAAaC,QAAQH,IACvC,OAAOjK,EAAY4D,KAAKyG,MAAMrK,GAAa,IAGhCsK,GAAc,SAACC,GAC1B,IAAMvK,EAAYkK,KAClBlK,EAAUuH,KAAKgD,GAXK,SAACvK,GACrBmK,aAAaK,QAAQP,GAAwBrG,KAAKC,UAAU7D,IAW5DyK,CAAczK,ICEV0K,GAAUnM,IAAOgL,IAAV,sOAaPoB,GAAWpM,IAAOgL,IAAV,kGAMRqB,GAAarM,IAAOgL,IAAV,iGA8DDsB,GAxDE,SAAC9F,GAChB,IAAM/B,EAAWoC,cADyB,EAElBmB,mBAAS,IAFS,oBAEnCtF,EAFmC,KAE7B6J,EAF6B,KAGpChB,EAAeC,aAA8B,SAAC3I,GAAD,OAAWA,EAAML,WAC9DiJ,EAAaD,aAA4B,SAAC3I,GAAD,OAAWA,EAAMqB,SAEhE,GAAIsC,EAAMgG,IAAK,CACb,IAAMC,EAAY,WAChBV,GAAY,CACVrJ,OACAgK,KAAMjB,EAAWrH,MACjB/B,MAAOkJ,EAAalJ,MACpBC,MAAOiJ,EAAajJ,MACpBC,MAAOgJ,EAAahJ,SAsBxB,OACE,cAAC4J,GAAD,UACE,eAACC,GAAD,WACE,kDACA,yCACA,+BACE,sDACmB,uBAAO9D,KAAK,OAAOlE,MAAO1B,EAAM8F,SAXlC,SAACC,GACxB8D,EAAQ9D,EAAME,OAAOvE,eAajB,eAACiI,GAAD,WACE,wBAAQhF,QApBD,WACb5C,EAASkI,MACTF,KAkBM,oBACA,wBAAQpF,QA9BA,WACd5C,EAASkI,MACTlI,EAASmI,KACTnI,EAASoI,KACTpI,EAASqI,MACTrI,EAASsI,IACTN,KAwBM,6BAMV,OAAO,8BC3DMO,GA5BF,WACX,IAAMvI,EAAWoC,cAEjBwB,qBAAU,WACR5D,EAASsI,MACR,CAACtI,IAEJ,IAAMd,EAAwB,CAC5B,CAAEwF,MAAO,WAAY0B,IAAK,WAAYzB,KAAM,IAC5C,CAAED,MAAO,SAAU0B,IAAK,SAAUzB,KAAM,IACxC,CAAED,MAAO,eAAgB0B,IAAK,cAAezB,KAAM,KAG/C6D,EAAazB,aAAY,SAAC3I,GAAD,OAAmBA,EAAMc,SACxDA,EAAMuJ,SAAQ,SAACnJ,GAAD,OAAWA,EAAKqF,KAAO6D,EAAWlJ,EAAK8G,MAAQ,MAE7D,IAAM2B,EAAMhB,aAAY,SAAC3I,GAAD,OAAmBA,EAAMmB,OAEjD,OACE,oCACE,uDACA,cAAC,GAAD,CAAUwI,IAAKA,IACf,cAAC,GAAD,IACA,cAAC,GAAD,CAAuB5B,UAAU,EAAOjH,MAAOA,EAAO8C,WAAW,QCxBxD0G,GALQ,WACrB,IAAMC,EAAoBpI,KAAelE,KAAI,SAACiD,GAAD,OAAUA,EAAKvC,UAC5D,OAAO0B,IAAavC,QAAO,SAAC+B,GAAD,OAAW0K,EAAkBxH,SAASlD,OCgBpD2K,GAfE,WACf,IAAM1J,EAAwB,CAC5B,CAAEwF,MAAO,WAAY0B,IAAK,WAAYzB,KAAM3D,MAC5C,CAAE0D,MAAO,UAAW0B,IAAK,UAAWzB,KAAM+D,MAC1C,CAAEhE,MAAO,eAAgB0B,IAAK,cAAezB,KAAM1D,OAGrD,OACE,oCACE,kDACA,cAAC,GAAD,CAAuBkF,UAAQ,EAACnE,WAAW,EAAO9C,MAAOA,QCMhD2J,GAhBA,WAAO,IACZxH,EAAeyH,cAAfzH,WAER,OACE,oCACE,6BAAKA,IACL,mBACE0H,KAAI,iGAA4F1H,GAChG6C,OAAO,QAFT,mCCGS8E,GAXG,WAChB,IAAM9J,EAAwB,CAAC,CAAEwF,MAAO,cAAe0B,IAAK,MAAOzB,KAAMlG,MAEzE,OACE,oCACE,oEACA,cAAC,GAAD,CAAuB0H,UAAQ,EAACnE,WAAS,EAAC9C,MAAOA,QCJxC+J,GANG,kBAChB,kCACE,mDCGEC,GAAc3N,IAAO4N,MAAV,6FAyCFC,GAnCG,WAChB,IAAMpM,EAAYkK,KAClBlK,EAAUqM,MAAK,SAACC,EAAWC,GAAZ,OAA0BD,EAAErB,KAAOsB,EAAEtB,QAEpD,IAAMuB,EAAOxM,EAAUX,KAAI,SAACkL,EAAejL,GAAhB,OACzB,+BACE,6BAAKA,EAAQ,IACb,6BAAKiL,EAAMtJ,OACX,+BAAKsJ,EAAMU,KAAX,OACA,6BAAKV,EAAM3J,QACX,6BAAK2J,EAAM1J,QACX,6BAAK0J,EAAMzJ,UANJxB,MAUX,OACE,oCACE,4DACA,eAAC4M,GAAD,WACE,gCACE,+BACE,mCACA,sCACA,sCACA,uCACA,uCACA,4CAGJ,gCAAQM,WC5BVC,GAAalO,IAAOmO,KAAV,6CAyBDC,GArBF,WACX,OACE,cAACF,GAAD,UACE,qBAAKpM,UAAU,gBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuM,KAAMlN,EAAcO,kBAA3B,SACE,cAAC,IAAD,CAAUb,GAAIM,EAAcC,SAE9B,cAAC,IAAD,CAAOW,OAAK,EAACsM,KAAMlN,EAAcC,KAAMkN,UAAWnM,IAClD,cAAC,IAAD,CAAOkM,KAAMlN,EAAcE,KAAMiN,UAAWtB,KAC5C,cAAC,IAAD,CAAOqB,KAAMlN,EAAcG,SAAUgN,UAAWjB,KAChD,cAAC,IAAD,CAAOgB,KAAMlN,EAAcK,OAAQ8M,UAAWhB,KAC9C,cAAC,IAAD,CAAOe,KAAMlN,EAAcI,UAAW+M,UAAWb,KACjD,cAAC,IAAD,CAAOY,KAAMlN,EAAcM,UAAW6M,UAAWT,KACjD,cAAC,IAAD,CAAOQ,KAAK,IAAIC,UAAWZ,aCxB/Ba,GAAU,CAAE5K,MAAO6K,GAAchM,QAASiM,EAAgBvK,MAAOwK,GAAc1K,IAAK2K,IAI3EC,GAFDC,YAAe,CAAEN,aCgBhBO,I,MAdH,WACV,OACE,qBAAKhN,UAAU,MAAf,SACE,cAAC,IAAD,CAAU8M,MAAOA,GAAjB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,EAAD,aCLKG,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFnF,SAASoF,eAAe,SAM1BZ,O","file":"static/js/main.dd6ca407.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  font-size: 24px;\r\n  font-family: 'Raleway';\r\n  color: rgb(82, 81, 84);\r\n  font-weight: bold;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport default StyledNavLink;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledNavSpan = styled.span`\r\n  font-size: 24px;\r\n  font-family: 'Raleway';\r\n  color: rgb(82, 81, 84);\r\n  font-weight: bold;\r\n  line-height: 1.2;\r\n`;\r\n\r\nexport default StyledNavSpan;\r\n","import styled from 'styled-components';\r\nimport { useLocation } from 'react-router-dom';\r\nimport StyledNavLink from './StyledNavLink';\r\nimport StyledNavSpan from './StyledNavSpan';\r\n\r\nconst StyledUL = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  padding: 0;\r\n`;\r\n\r\nconst Breadcrumbs = () => {\r\n  const { pathname } = useLocation();\r\n  const crumbs = pathname.split('/').filter((i) => i);\r\n\r\n  return (\r\n    <StyledUL>\r\n      <StyledNavLink to=\"/\">home</StyledNavLink>\r\n      {crumbs.map((i, index) => (\r\n        <li key={i}>\r\n          {index < crumbs.length - 1 ? (\r\n            <StyledNavLink to={`/${crumbs.slice(0, index + 1).join('/')}`}>&nbsp;{`> ${i}`}</StyledNavLink>\r\n          ) : (\r\n            <StyledNavSpan>&nbsp;{`> ${i}`}</StyledNavSpan>\r\n          )}\r\n        </li>\r\n      ))}\r\n    </StyledUL>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n","const ROUTING_PATHS = {\r\n  home: '/',\r\n  game: '/game',\r\n  solution: '/solution',\r\n  reference: '/reference',\r\n  method: '/reference/:methodName',\r\n  topScores: '/top-scores',\r\n  prodStartingPoint: '/anton-kan-06-onl-01-Kahn-Anton-JS-advanced/react-array-methods/build/',\r\n};\r\n\r\nexport default ROUTING_PATHS;\r\n","import { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport Breadcrumbs from '../components/Breadcrumbs';\r\nimport ROUTING_PATHS from '../helpers/routing_paths';\r\n\r\nconst activeClassName = 'nav-item-active';\r\n\r\nconst StyledNavLink = styled(NavLink).attrs({ activeClassName })`\r\n  font-size: 40px;\r\n  font-family: 'Raleway';\r\n  color: rgb(198, 196, 196);\r\n  font-weight: bold;\r\n  line-height: 1.2;\r\n  &.${activeClassName} {\r\n    color: rgb(143, 119, 119);\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"App-header\">\r\n      <h1 className=\"App-header-title\">Array Methods</h1>\r\n      <nav className=\"App-header-menu\">\r\n        <ul>\r\n          <li>\r\n            <StyledNavLink to={ROUTING_PATHS.home} exact>\r\n              Home\r\n            </StyledNavLink>\r\n          </li>\r\n          <li>\r\n            <StyledNavLink to={ROUTING_PATHS.game}>Game</StyledNavLink>\r\n          </li>\r\n\r\n          <li>\r\n            <StyledNavLink to={ROUTING_PATHS.solution}>Solution</StyledNavLink>\r\n          </li>\r\n          <li>\r\n            <StyledNavLink to={ROUTING_PATHS.reference}>Reference</StyledNavLink>\r\n          </li>\r\n          <li>\r\n            <StyledNavLink to={ROUTING_PATHS.topScores}>Top Scores</StyledNavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <Breadcrumbs />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledFooter = styled.footer`\r\n  flex-grow: 0;\r\n  padding: 25px 0;\r\n  background-color: #282c34;\r\n  color: white;\r\n`;\r\n\r\nconst Footer = () => <StyledFooter>&copy; Anton Kahn, 2021</StyledFooter>;\r\n\r\nexport default Footer;\r\n","const Home = () => (\r\n  <section>\r\n    <h2>Welcome to Array Methods game!</h2>\r\n  </section>\r\n);\r\n\r\nexport default Home;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = { total: 0, right: 0, wrong: 0 };\r\n\r\nconst counter = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: (state, { payload }) => {\r\n      const newState = { ...state };\r\n      newState.total++;\r\n      payload.right ? newState.right++ : newState.wrong++;\r\n      return newState;\r\n    },\r\n    reset: () => {\r\n      return { ...initialState };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, reset } = counter.actions;\r\n\r\nexport default counter.reducer;\r\n","const allMethods = (): string[] =>\r\n  Object.getOwnPropertyNames(Array.prototype).filter(\r\n    (property) => typeof (Array as { [key: string]: any }).prototype[property] === 'function'\r\n  );\r\n\r\nexport default allMethods;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport allMethods from '../model/all-methods';\r\nimport ILists from '../interfaces/ILists';\r\n\r\ninterface IListsPayload {\r\n  source: keyof ILists;\r\n  dest: keyof ILists;\r\n  method: string;\r\n}\r\n\r\nconst initialState: ILists = {\r\n  mutating: [],\r\n  source: allMethods(),\r\n  nonMutating: [],\r\n};\r\n\r\nconst lists = createSlice({\r\n  name: 'lists',\r\n  initialState,\r\n  reducers: {\r\n    move: (state: ILists, action: PayloadAction<IListsPayload>) => {\r\n      const { source, dest, method } = action.payload;\r\n      state[dest] = [...(state[dest] || []), method];\r\n      state[source] = (state[source] || []).filter((item) => item !== method);\r\n      return state;\r\n    },\r\n    reset: () => {\r\n      return { ...initialState };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { move, reset } = lists.actions;\r\n\r\nexport default lists.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = false;\r\n\r\nconst win = createSlice({\r\n  name: 'win',\r\n  initialState,\r\n  reducers: {\r\n    set: () => true,\r\n    reset: () => initialState,\r\n  },\r\n});\r\n\r\nexport const { set, reset } = win.actions;\r\n\r\nexport default win.reducer;\r\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit';\r\nimport ITimer from '../interfaces/ITimer';\r\n\r\ninterface ITimerPayload {\r\n  intervalRef: null | NodeJS.Timeout;\r\n}\r\n\r\nconst initialState: ITimer = { intervalRef: null, value: 0 };\r\n\r\nconst timer = createSlice({\r\n  name: 'timer',\r\n  initialState,\r\n  reducers: {\r\n    setRef: (state: ITimer, action: PayloadAction<ITimerPayload>) => {\r\n      const { intervalRef } = action.payload;\r\n      return { ...state, intervalRef };\r\n    },\r\n    stop: (state: ITimer) => {\r\n      if (state.intervalRef) {\r\n        clearInterval(state.intervalRef);\r\n      }\r\n      return { ...state, intervalRef: null };\r\n    },\r\n    increment: (state: ITimer) => {\r\n      return { ...state, value: state.value + 1 };\r\n    },\r\n    reset: (state: ITimer) => {\r\n      return { ...state, value: 0 };\r\n    },\r\n  },\r\n});\r\n\r\nexport const start = (dispatch: Dispatch, getState: Function) => {\r\n  if (!getState().timer.intervalRef) {\r\n    const intervalRef = setInterval(() => {\r\n      dispatch(timer.actions.increment());\r\n    }, 1000);\r\n    dispatch(timer.actions.setRef({ intervalRef }));\r\n  }\r\n};\r\n\r\nexport const { reset, stop } = timer.actions;\r\n\r\nexport default timer.reducer;\r\n","const ARRAY_ARGS = [0, 3, 4];\r\nconst FUNCTION_ARGS = [(item: number) => item < 4];\r\nconst NUMBER_ARGS = [3];\r\nconst EMPTY_ARGS: number[] = [];\r\n\r\ninterface IMethodWithArgs {\r\n  method: string;\r\n  args: number[] | Function[];\r\n}\r\n\r\nconst knownMethods = (): IMethodWithArgs[] => [\r\n  { method: 'concat', args: ARRAY_ARGS },\r\n  { method: 'copyWithin', args: ARRAY_ARGS },\r\n  { method: 'entries', args: EMPTY_ARGS },\r\n  { method: 'every', args: FUNCTION_ARGS },\r\n  { method: 'fill', args: ARRAY_ARGS },\r\n  { method: 'filter', args: FUNCTION_ARGS },\r\n  { method: 'find', args: FUNCTION_ARGS },\r\n  { method: 'findIndex', args: FUNCTION_ARGS },\r\n  { method: 'flat', args: EMPTY_ARGS },\r\n  { method: 'flatMap', args: FUNCTION_ARGS },\r\n  { method: 'forEach', args: FUNCTION_ARGS },\r\n  { method: 'includes', args: NUMBER_ARGS },\r\n  { method: 'indexOf', args: NUMBER_ARGS },\r\n  { method: 'join', args: EMPTY_ARGS },\r\n  { method: 'keys', args: EMPTY_ARGS },\r\n  { method: 'lastIndexOf', args: NUMBER_ARGS },\r\n  { method: 'map', args: FUNCTION_ARGS },\r\n  { method: 'pop', args: EMPTY_ARGS },\r\n  { method: 'push', args: NUMBER_ARGS },\r\n  { method: 'reduce', args: FUNCTION_ARGS },\r\n  { method: 'reduceRight', args: FUNCTION_ARGS },\r\n  { method: 'reverse', args: EMPTY_ARGS },\r\n  { method: 'shift', args: EMPTY_ARGS },\r\n  { method: 'slice', args: ARRAY_ARGS },\r\n  { method: 'some', args: FUNCTION_ARGS },\r\n  { method: 'sort', args: EMPTY_ARGS },\r\n  { method: 'splice', args: ARRAY_ARGS },\r\n  { method: 'toLocaleString', args: EMPTY_ARGS },\r\n  { method: 'toString', args: EMPTY_ARGS },\r\n  { method: 'unshift', args: NUMBER_ARGS },\r\n  { method: 'values', args: EMPTY_ARGS },\r\n  { method: 'at', args: NUMBER_ARGS },\r\n];\r\n\r\nexport default knownMethods;\r\n","const isMutating = (array, method, args) => {\r\n  const arrayImage = JSON.stringify(array);\r\n  array[method](...args);\r\n  return JSON.stringify(array) !== arrayImage;\r\n};\r\n\r\nexport default isMutating;\r\n","const sampleArray = () => [1, 2, 3, 4, 5, [6, 7], 3, new Date(), 8, 9, 10];\r\n\r\nexport default sampleArray;\r\n","import knownMethods from '../model/known-methods';\r\nimport isMutating from './is-mutating';\r\nimport sampleArray from './sample-array';\r\n\r\nconst mutatingMethods = () =>\r\n  knownMethods()\r\n    .filter(({ method, args }) => isMutating(sampleArray(), method, args))\r\n    .map((item) => item.method);\r\n\r\nexport default mutatingMethods;\r\n","import knownMethods from '../model/known-methods';\r\nimport mutatingMethods from './mutating-methods';\r\n\r\nconst nonMutatingMethods = () => {\r\n  const mutatingMethodsList = mutatingMethods();\r\n  return knownMethods()\r\n    .map((item) => item.method)\r\n    .filter((name) => !mutatingMethodsList.includes(name));\r\n};\r\n\r\nexport default nonMutatingMethods;\r\n","import mutatingMethods from './mutating-methods';\r\nimport nonMutatingMethods from './non-mutating-methods';\r\n\r\nconst checkMethod = (methodName, listKey) => {\r\n  switch (listKey) {\r\n    case 'mutating':\r\n      return mutatingMethods().includes(methodName);\r\n    case 'nonMutating':\r\n      return nonMutatingMethods().includes(methodName);\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n\r\nexport default checkMethod;\r\n","import mutatingMethods from './mutating-methods';\r\nimport nonMutatingMethods from './non-mutating-methods';\r\n\r\nconst checkMethodLists = (methodLists) =>\r\n  compareArrays(methodLists.mutating, mutatingMethods()) &&\r\n  compareArrays(methodLists.nonMutating, nonMutatingMethods());\r\n\r\nconst compareArrays = (array1, array2) =>\r\n  array1.length === array2.length && array1.every((element) => array2.includes(element));\r\n\r\nexport default checkMethodLists;\r\n","import { NavLink, generatePath } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { increment as incrementAction } from '../../store/counterReducer';\r\nimport { move as moveAction } from '../../store/listsReducer';\r\nimport { set as winAction } from '../../store/winReducer';\r\nimport { stop as stopTimerAction } from '../../store/timerReducer';\r\n\r\nimport './index.css';\r\nimport ROUTING_PATHS from '../../helpers/routing_paths';\r\nimport ILists from '../../interfaces/ILists';\r\nimport checkMethod from '../../controller/check-method';\r\nimport { Dispatch } from '@reduxjs/toolkit';\r\nimport checkMethodLists from '../../controller/check-method-lists';\r\nimport IState from '../../interfaces/IState';\r\n\r\ninterface IMethodItemProps {\r\n  withLinks?: boolean;\r\n  method: string;\r\n  ownListKey: keyof ILists;\r\n  leftListKey?: keyof ILists;\r\n  rightListKey?: keyof ILists;\r\n}\r\n\r\nconst MethodItem = (props: IMethodItemProps) => {\r\n  const { withLinks, method, ownListKey, leftListKey, rightListKey } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const referencePath = generatePath(ROUTING_PATHS.method, { methodName: method });\r\n\r\n  const move = (destListKey?: keyof ILists) => {\r\n    if (destListKey) {\r\n      dispatch((dispatch: Dispatch, getState: () => IState) => {\r\n        dispatch(incrementAction({ right: checkMethod(method, destListKey) }));\r\n        dispatch(moveAction({ source: ownListKey, dest: destListKey, method }));\r\n        if (checkMethodLists(getState().lists)) {\r\n          dispatch(winAction());\r\n          dispatch(stopTimerAction());\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const moveLeft = () => move(leftListKey);\r\n\r\n  const moveRight = () => move(rightListKey);\r\n\r\n  return (\r\n    <li className=\"MethodItem\">\r\n      {leftListKey && <button onClick={moveLeft}>&#8592;</button>}\r\n      <span data-tooltip={method}>{withLinks ? <NavLink to={referencePath}>{method}</NavLink> : method}</span>\r\n      {rightListKey && <button onClick={moveRight}>&#8594;</button>}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MethodItem;\r\n","import { useEffect, useState, useRef, SyntheticEvent } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nconst FILTER_DELAY = 1000;\r\n\r\ninterface IMethodsListFilterProps {\r\n  filterKey: string;\r\n}\r\n\r\nconst MethodsListFilter = (props: IMethodsListFilterProps) => {\r\n  const { filterKey } = props;\r\n  const searchParams = new URLSearchParams(useLocation().search);\r\n  const filter = searchParams.get(filterKey) || '';\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [displayedFilter, setDisplayedFilter] = useState(filter);\r\n  const filterTimeoutRef = useRef<NodeJS.Timeout>();\r\n\r\n  const setFilter = (newFilter: string) => {\r\n    searchParams.set(filterKey, newFilter);\r\n    location.search = searchParams.toString();\r\n    history.push(location);\r\n  };\r\n\r\n  // This is needed for cases when the filter was changed extrenally (for example, by clicking Back button)\r\n  useEffect(() => setDisplayedFilter(filter), [filter]);\r\n\r\n  const changeDisplayedFilter = (event: SyntheticEvent<HTMLInputElement>) => {\r\n    const newFilter = (event.target as HTMLInputElement).value;\r\n    setDisplayedFilter(newFilter);\r\n    if (filterTimeoutRef.current) {\r\n      clearTimeout(filterTimeoutRef.current);\r\n    }\r\n    filterTimeoutRef.current = setTimeout(() => {\r\n      setFilter(newFilter);\r\n    }, FILTER_DELAY);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Start typing to filter...\"\r\n      value={displayedFilter}\r\n      onChange={changeDisplayedFilter}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MethodsListFilter;\r\n","import { useLocation } from 'react-router-dom';\r\nimport ILists from '../../interfaces/ILists';\r\nimport MethodItem from '../MethodItem';\r\nimport MethodsListFilter from './MethodsListFilter';\r\n\r\ninterface IMethodsListProps {\r\n  withLinks?: boolean;\r\n  title: string;\r\n  ownListKey: keyof ILists;\r\n  leftListKey?: keyof ILists;\r\n  rightListKey?: keyof ILists;\r\n  list: string[];\r\n}\r\n\r\nconst MethodsList = (props: IMethodsListProps) => {\r\n  const { withLinks, title, ownListKey, leftListKey, rightListKey, list } = props;\r\n  const filterKey = `${title}Filter`;\r\n\r\n  const filter = new URLSearchParams(useLocation().search).get(filterKey);\r\n\r\n  const filteredList = filter ? list.filter((method) => method.toLowerCase().includes(filter.toLowerCase())) : list;\r\n  return (\r\n    <div className=\"MethodsList\">\r\n      <h3>{title}</h3>\r\n      <MethodsListFilter filterKey={filterKey} />\r\n      <ul>\r\n        {filteredList.map((method) => (\r\n          <MethodItem\r\n            withLinks={withLinks}\r\n            key={method}\r\n            method={method}\r\n            ownListKey={ownListKey}\r\n            leftListKey={leftListKey}\r\n            rightListKey={rightListKey}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MethodsList;\r\n","import { useEffect, useState } from 'react';\r\nimport './index.css';\r\n\r\nconst Tooltip = () => {\r\n  const [position, setPosition] = useState({ top: '0px', left: '0px' });\r\n  const [text, setText] = useState('');\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  const toggleTooltip = (event: Event) => {\r\n    const targetElement = (event.target as HTMLElement).closest('[data-tooltip]') as HTMLElement;\r\n    if (targetElement) {\r\n      setPosition({\r\n        top: `${targetElement.getBoundingClientRect().bottom}px`,\r\n        left: `${targetElement.getBoundingClientRect().left}px`,\r\n      });\r\n      setText(targetElement.dataset.tooltip || '');\r\n      setDisplay(true);\r\n      return;\r\n    }\r\n    setPosition({ top: '0px', left: '0px' });\r\n    setText('');\r\n    setDisplay(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousemove', toggleTooltip);\r\n    return () => document.removeEventListener('mousemove', toggleTooltip);\r\n  });\r\n\r\n  const style = {\r\n    left: position.left,\r\n    top: position.top,\r\n  };\r\n  return (\r\n    <div className={`Tooltip ${!display && 'Tooltip-hidden'}`} style={style}>\r\n      {text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import MethodsList from '../MethodsList';\r\nimport Tooltip from '../Tooltip';\r\nimport IMethodsList from '../../interfaces/IMethodsList';\r\n\r\nimport './index.css';\r\n\r\ninterface IMethodsListsContainerProps {\r\n  readonly: boolean;\r\n  withLinks: boolean;\r\n  lists: IMethodsList[];\r\n}\r\n\r\nconst MethodsListsContainer = (props: IMethodsListsContainerProps) => {\r\n  const { readonly, withLinks, lists } = props;\r\n  return (\r\n    <div className=\"MethodsListsContainer\">\r\n      <Tooltip />\r\n      {lists.map((item, index) => (\r\n        <MethodsList\r\n          withLinks={withLinks}\r\n          title={item.title}\r\n          key={item.key}\r\n          ownListKey={item.key}\r\n          leftListKey={(!readonly && index > 0 && lists[index - 1].key) || undefined}\r\n          rightListKey={(!readonly && index < lists.length - 1 && lists[index + 1].key) || undefined}\r\n          list={item.list}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MethodsListsContainer;\r\n","import styled from 'styled-components';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport IState from '../interfaces/IState';\r\nimport ICounter from '../interfaces/ICounter';\r\nimport ITimer from '../interfaces/ITimer';\r\n\r\nconst FlexDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst BorderedDiv = styled.div`\r\n  border: 1px black solid;\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst StyledH3 = styled.h3`\r\n  margin: 0;\r\n`;\r\n\r\nconst RightSpan = styled.span`\r\n  color: green;\r\n`;\r\n\r\nconst WrongSpan = styled.span`\r\n  color: red;\r\n`;\r\n\r\nconst Counter = () => {\r\n  const counterState = useSelector<IState, ICounter>((state) => state.counter);\r\n  const timerState = useSelector<IState, ITimer>((state) => state.timer);\r\n  return (\r\n    <FlexDiv>\r\n      <BorderedDiv>\r\n        <StyledH3>Time Elapsed: </StyledH3>\r\n        <div>{timerState.value}s</div>\r\n\r\n        <StyledH3>Clicks</StyledH3>\r\n        <div>\r\n          Total: {counterState.total} <RightSpan>Right: {counterState.right}</RightSpan>{' '}\r\n          <WrongSpan>Wrong: {counterState.wrong}</WrongSpan>\r\n        </div>\r\n      </BorderedDiv>\r\n    </FlexDiv>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import { IScore } from '../interfaces/IScore';\r\n\r\nconst TOP_SCORES_STORAGE_KEY = 'top-scores';\r\n\r\nconst saveTopScores = (topScores: IScore[]) => {\r\n  localStorage.setItem(TOP_SCORES_STORAGE_KEY, JSON.stringify(topScores));\r\n};\r\n\r\nexport const loadTopScores = () => {\r\n  const topScores = localStorage.getItem(TOP_SCORES_STORAGE_KEY);\r\n  return topScores ? JSON.parse(topScores) : [];\r\n};\r\n\r\nexport const addTopScore = (score: IScore) => {\r\n  const topScores = loadTopScores();\r\n  topScores.push(score);\r\n  saveTopScores(topScores);\r\n};\r\n","import styled from 'styled-components';\r\n\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { reset as resetCounterAction } from '../store/counterReducer';\r\nimport { reset as resetListsAction } from '../store/listsReducer';\r\nimport { reset as resetTimerAction } from '../store/timerReducer';\r\nimport { start as startTimerThunk } from '../store/timerReducer';\r\nimport { reset as resetWinAction } from '../store/winReducer';\r\nimport { addTopScore } from '../controller/top-scores-storage';\r\nimport IState from '../interfaces/IState';\r\nimport ICounter from '../interfaces/ICounter';\r\nimport ITimer from '../interfaces/ITimer';\r\n\r\ninterface IWonPopupProps {\r\n  won: boolean;\r\n}\r\n\r\nconst VeilDiv = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 2;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst PopupDiv = styled.div`\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst ButtonsDiv = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  margin: 10px;\r\n`;\r\n\r\nconst WonPopup = (props: IWonPopupProps) => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const counterState = useSelector<IState, ICounter>((state) => state.counter);\r\n  const timerState = useSelector<IState, ITimer>((state) => state.timer);\r\n\r\n  if (props.won) {\r\n    const saveScore = () => {\r\n      addTopScore({\r\n        name,\r\n        time: timerState.value,\r\n        total: counterState.total,\r\n        right: counterState.right,\r\n        wrong: counterState.wrong,\r\n      });\r\n    };\r\n\r\n    const restart = () => {\r\n      dispatch(resetWinAction());\r\n      dispatch(resetListsAction());\r\n      dispatch(resetCounterAction());\r\n      dispatch(resetTimerAction());\r\n      dispatch(startTimerThunk);\r\n      saveScore();\r\n    };\r\n\r\n    const finish = () => {\r\n      dispatch(resetWinAction());\r\n      saveScore();\r\n    };\r\n\r\n    const handleChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      setName(event.target.value);\r\n    };\r\n\r\n    return (\r\n      <VeilDiv>\r\n        <PopupDiv>\r\n          <h2>Congratulations!</h2>\r\n          <p>You Won!</p>\r\n          <form>\r\n            <label>\r\n              Enter your name: <input type=\"text\" value={name} onChange={handleChangeName} />\r\n            </label>\r\n          </form>\r\n          <ButtonsDiv>\r\n            <button onClick={finish}>Finish</button>\r\n            <button onClick={restart}>Restart</button>\r\n          </ButtonsDiv>\r\n        </PopupDiv>\r\n      </VeilDiv>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default WonPopup;\r\n","import MethodsListsContainer from '../components/MethodsListsContainer';\r\nimport Counter from '../components/Counter';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport IState from '../interfaces/IState';\r\nimport IMethodsList from '../interfaces/IMethodsList';\r\nimport WonPopup from '../components/WonPopup';\r\nimport { start as startTimerThunk } from '../store/timerReducer';\r\n\r\nconst Game = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(startTimerThunk);\r\n  }, [dispatch]);\r\n\r\n  const lists: IMethodsList[] = [\r\n    { title: 'Mutating', key: 'mutating', list: [] },\r\n    { title: 'Source', key: 'source', list: [] },\r\n    { title: 'Non-mutating', key: 'nonMutating', list: [] },\r\n  ];\r\n\r\n  const listsState = useSelector((state: IState) => state.lists);\r\n  lists.forEach((item) => (item.list = listsState[item.key] || []));\r\n\r\n  const won = useSelector((state: IState) => state.win);\r\n\r\n  return (\r\n    <section>\r\n      <h2>The game has started!</h2>\r\n      <WonPopup won={won} />\r\n      <Counter />\r\n      <MethodsListsContainer readonly={false} lists={lists} withLinks={false} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import allMethods from '../model/all-methods';\r\nimport knownMethods from '../model/known-methods';\r\n\r\nconst unknownMethods = () => {\r\n  const knownMethodsNames = knownMethods().map((item) => item.method);\r\n  return allMethods().filter((name) => !knownMethodsNames.includes(name));\r\n};\r\n\r\nexport default unknownMethods;\r\n","import MethodsListsContainer from '../components/MethodsListsContainer';\r\nimport IMethodsList from '../interfaces/IMethodsList';\r\nimport mutatingMethods from '../controller/mutating-methods';\r\nimport nonMutatingMethods from '../controller/non-mutating-methods';\r\nimport unknownMethods from '../controller/unknown-methods';\r\n\r\nconst Solution = () => {\r\n  const lists: IMethodsList[] = [\r\n    { title: 'Mutating', key: 'mutating', list: mutatingMethods() },\r\n    { title: 'Unknown', key: 'unknown', list: unknownMethods() },\r\n    { title: 'Non-mutating', key: 'nonMutating', list: nonMutatingMethods() },\r\n  ];\r\n\r\n  return (\r\n    <section>\r\n      <h2>Correct solution</h2>\r\n      <MethodsListsContainer readonly withLinks={false} lists={lists} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Solution;\r\n","import { useParams } from 'react-router-dom';\r\n\r\ninterface IParamTypes {\r\n  methodName: string;\r\n}\r\n\r\nconst Method = () => {\r\n  const { methodName } = useParams<IParamTypes>();\r\n\r\n  return (\r\n    <section>\r\n      <h2>{methodName}</h2>\r\n      <a\r\n        href={`https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/${methodName}`}\r\n        target=\"blank\"\r\n      >\r\n        MDN Documentation\r\n      </a>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Method;\r\n","import MethodsListsContainer from '../components/MethodsListsContainer';\r\nimport IMethodsList from '../interfaces/IMethodsList';\r\nimport allMethods from '../model/all-methods';\r\n\r\nconst Reference = () => {\r\n  const lists: IMethodsList[] = [{ title: 'All methods', key: 'all', list: allMethods() }];\r\n\r\n  return (\r\n    <section>\r\n      <h2>JavaScript Array methods Reference</h2>\r\n      <MethodsListsContainer readonly withLinks lists={lists} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Reference;\r\n","const ErrorPage = () => (\r\n  <section>\r\n    <h2>Page not found</h2>\r\n  </section>\r\n);\r\n\r\nexport default ErrorPage;\r\n","import styled from 'styled-components';\r\n\r\nimport { loadTopScores } from '../controller/top-scores-storage';\r\nimport { IScore } from '../interfaces/IScore';\r\n\r\nconst StyledTable = styled.table`\r\n  border: 1px solid black;\r\n  width: 100%;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst TopScores = () => {\r\n  const topScores = loadTopScores();\r\n  topScores.sort((a: IScore, b: IScore) => a.time - b.time);\r\n\r\n  const rows = topScores.map((score: IScore, index: number) => (\r\n    <tr key={index}>\r\n      <td>{index + 1}</td>\r\n      <td>{score.name}</td>\r\n      <td>{score.time}s</td>\r\n      <td>{score.total}</td>\r\n      <td>{score.right}</td>\r\n      <td>{score.wrong}</td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <section>\r\n      <h2>Top Scores ordered by time</h2>\r\n      <StyledTable>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Time</th>\r\n            <th>Total</th>\r\n            <th>Right</th>\r\n            <th>Wrong</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{rows}</tbody>\r\n      </StyledTable>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default TopScores;\r\n","import { Switch, Route, Redirect } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport ROUTING_PATHS from '../helpers/routing_paths';\r\nimport Home from './Home';\r\nimport Game from './Game';\r\nimport Solution from './Solution';\r\nimport Method from './Method';\r\nimport Reference from './Reference';\r\nimport ErrorPage from './ErrorPage';\r\nimport TopScores from './TopScores';\r\n\r\nconst StyledMain = styled.main`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst Main = () => {\r\n  return (\r\n    <StyledMain>\r\n      <div className=\"App-container\">\r\n        <Switch>\r\n          <Route path={ROUTING_PATHS.prodStartingPoint}>\r\n            <Redirect to={ROUTING_PATHS.home} />\r\n          </Route>\r\n          <Route exact path={ROUTING_PATHS.home} component={Home} />\r\n          <Route path={ROUTING_PATHS.game} component={Game} />\r\n          <Route path={ROUTING_PATHS.solution} component={Solution} />\r\n          <Route path={ROUTING_PATHS.method} component={Method} />\r\n          <Route path={ROUTING_PATHS.reference} component={Reference} />\r\n          <Route path={ROUTING_PATHS.topScores} component={TopScores} />\r\n          <Route path=\"*\" component={ErrorPage} />\r\n        </Switch>\r\n      </div>\r\n    </StyledMain>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport listsReducer from './listsReducer';\r\nimport counterReducer from './counterReducer';\r\nimport timerReducer from './timerReducer';\r\nimport winReducer from './winReducer';\r\n\r\nconst reducer = { lists: listsReducer, counter: counterReducer, timer: timerReducer, win: winReducer };\r\n\r\nconst store = configureStore({ reducer });\r\n\r\nexport default store;\r\n","import { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport Header from './pages/Header';\r\nimport Footer from './pages/Footer';\r\nimport Main from './pages/Main';\r\nimport store from './store';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Header />\r\n          <Main />\r\n          <Footer />\r\n        </Router>\r\n      </Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}